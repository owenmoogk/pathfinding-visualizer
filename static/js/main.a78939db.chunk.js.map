{"version":3,"sources":["Box.js","Queue.js","App.js","index.js"],"names":["Box","props","id","row","col","style","border","height","boxSize","toString","width","Queue","this","elements","prototype","add","e","push","dequeue","shift","isEmpty","length","App","interval","undefined","getCoords","element","getAttribute","parseInt","getElement","coords","document","getElementById","startAlgorithm","algorithm","start","getElementsByClassName","end","classList","blankElements","name","Array","from","forEach","contains","remove","getNeighbors","filter","a","stopInterval","clearInterval","depthFirstSearch","stack","require","cameFrom","closed","Set","setInterval","currentNode","pop","has","neighbors","i","neighbor","breadthFirstSearch","nextQueue","nextQueueHash","paint","clickOverride","Math","floor","clientX","window","innerWidth","offsetWidth","childNodes","clientY","event","buttons","endNode","lastClickedCoords","currentRow","currentCol","currBox","className","addEventListener","preventDefault","display","gridHeight","innerHeight","gridWidth","userSelect","onClick","onMouseMove","onMouseDown","grid","getGrid","map","key","location","reload","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a78939db.chunk.js","sourcesContent":["\r\nexport default function Box(props){\r\n    return(\r\n        <div id={'row'+props.row+\"col\"+props.col} row={props.row} col={props.col} style={{\r\n            // backgroundColor: 'grey',\r\n            border: '1px solid black',\r\n            height: (props.boxSize-2).toString() + 'px',\r\n            width: (props.boxSize-2).toString() + 'px'\r\n        }}></div>\r\n    )\r\n}","export default function Queue() {\r\n    this.elements = []\r\n\r\n    Queue.prototype.add = function(e) {\r\n        this.elements.push(e)\r\n    }\r\n\r\n    Queue.prototype.dequeue = function () {\r\n        return this.elements.shift()\r\n    }\r\n\r\n    Queue.prototype.isEmpty = function () {\r\n        return this.elements.length === 0\r\n    }\r\n}","import PriorityQueue from 'js-priority-queue'\nimport Box from './Box.js'\nimport './styles.css'\nimport Queue from './Queue'\nimport { useState } from 'react'\n\nexport default function App() {\n\n  // timing for visualizations\n  var interval = undefined;\n\n  // getting grid coords from cell element\n  function getCoords(element) {\n    var row = element.getAttribute('row')\n    var col = element.getAttribute('col')\n    row = parseInt(row)\n    col = parseInt(col)\n    return ([row, col])\n  }\n\n  // getting cell element from grid coords\n  function getElement(coords) {\n    var [row, col] = coords\n    return (document.getElementById('row' + row + 'col' + col))\n  }\n\n  // clears the used squares before running, checks start and end, passed the function to call.\n  function startAlgorithm(algorithm) {\n\n    if (interval){\n      return\n    }\n\n    function blankElements(elements, name) {\n      Array.from(elements).forEach(element => {\n        if (!(element.classList.contains('start') || element.classList.contains('end'))) {\n          element.classList.remove(name)\n        }\n      })\n    }\n    try{\n      var start = document.getElementsByClassName('start')[0]\n      var end = document.getElementsByClassName('end')[0]\n      start.classList = 'start'\n      end.classList = 'end'\n    }\n    catch{\n      return\n    }\n    blankElements(document.getElementsByClassName('closed'), 'closed')\n    blankElements(document.getElementsByClassName('path'), 'path')\n    blankElements(document.getElementsByClassName('open'), 'open')\n\n    algorithm(start, end)\n  }\n\n  // get the given neighbors of a cell.. this includes barriers and closed nodes so have to filter in the function\n  function getNeighbors(element) {\n    var [row, col] = getCoords(element)\n    var elements = []\n    elements.push(getElement([row + 1, col]))\n    elements.push(getElement([row - 1, col]))\n    elements.push(getElement([row, col + 1]))\n    elements.push(getElement([row, col - 1]))\n    elements = elements.filter((a) => a)\n\n    return (elements)\n  }\n\n  // stop the interval from running when the algorithm is done\n  function stopInterval(){\n    clearInterval(interval)\n    // we set the interval to undefined so we can check to see if an interval is running or not\n    interval = undefined\n  }\n\n  // depth first search algorithm\n  function depthFirstSearch(start, end) {\n\n    var lifo = require('stack-lifo')\n    var stack = new lifo()\n    stack.push(start)\n\n    var cameFrom = {}\n    var closed = new Set()\n\n    interval = setInterval(function () {\n\n      var currentNode = stack.pop()\n\n      while (closed.has(currentNode)) {\n        currentNode = stack.pop()\n        if (stack.isEmpty()) {\n          stopInterval();\n          return\n        }\n      }\n\n      closed.add(currentNode)\n      currentNode.classList.add('closed')\n\n      var neighbors = getNeighbors(currentNode)\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier')) {\n          continue\n        }\n        cameFrom[getCoords(neighbor)] = currentNode\n        stack.push(neighbor)\n      }\n      if (stack.isEmpty()) stopInterval();\n      if (currentNode === end) {\n        while (currentNode !== start) {\n          cameFrom[getCoords(currentNode)].classList.add('path')\n          cameFrom[getCoords(currentNode)].classList.remove('closed')\n          currentNode = cameFrom[getCoords(currentNode)]\n        }\n        stopInterval()\n        return\n      }\n    }, 10)\n  }\n\n  // breadth first search algorithm\n  function breadthFirstSearch(start, end) {\n\n    var nextQueue = new Queue()\n    nextQueue.add(start)\n    var nextQueueHash = new Set()\n\n    var cameFrom = {}\n\n    interval = setInterval(function () {\n\n      if (nextQueue.isEmpty()) {\n        stopInterval()\n        return\n      }\n\n      var currentNode = nextQueue.dequeue()\n\n      var neighbors = getNeighbors(currentNode)\n\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier') || nextQueueHash.has(neighbor)) {\n          continue\n        }\n        nextQueue.add(neighbor)\n        nextQueueHash.add(neighbor)\n        neighbor.classList.add('open')\n        cameFrom[getCoords(neighbor)] = currentNode\n        \n        if (neighbor === end){\n          while (neighbor !== start) {\n            cameFrom[getCoords(neighbor)].classList.add('path')\n            cameFrom[getCoords(neighbor)].classList.remove('closed')\n            cameFrom[getCoords(neighbor)].classList.remove('open')\n            neighbor = cameFrom[getCoords(neighbor)]\n          }\n          stopInterval()\n        return\n        }\n      }\n\n      currentNode.classList.remove('open')\n      currentNode.classList.add('closed')\n    }, 10)\n  }\n\n  // paint function takes a event and paints color onto the screen\n  // click override is just saying it was a click event and not mouse movement, so it doesnt pass a button, we have to manually set it\n  function paint(e, clickOverride = false) {\n\n    // big math to figure out which cell the mouse is over\n    var col = Math.floor((e.clientX-((window.innerWidth-document.getElementById('grid').offsetWidth)/2)) / document.getElementsByClassName('row')[0].childNodes[0].offsetWidth)\n    var row = Math.floor((e.clientY-70) / boxSize)\n\n    if (window.event.buttons !== 0 || clickOverride) {\n\n      var element = document.getElementById('row' + row + 'col' + col)\n      if (!element){\n        return\n      }\n\n      // check to see if start and end exist, and if not and left clicking place them\n      if (document.getElementsByClassName('start').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        document.getElementById('row' + row + 'col' + col).classList.add('start')\n        return\n      }\n      if (document.getElementsByClassName('end').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        var endNode = document.getElementById('row' + row + 'col' + col)\n        if (endNode.classList.contains('start')) {\n          return\n        }\n        endNode.classList.add('end')\n        return\n      }\n\n      // paint the boxes when clicked, including the ones inbetween cuz it doesnt fire enough\n      if (!lastClickedCoords) {\n        var currentRow = row\n        var currentCol = col\n      }\n      else {\n        currentRow = lastClickedCoords[0]\n        currentCol = lastClickedCoords[1]\n      }\n\n      do {\n        if (row > currentRow) {\n          currentRow += 1\n        }\n        else if (row < currentRow) {\n          currentRow -= 1\n        }\n        if (col > currentCol) {\n          currentCol += 1\n        }\n        else if (col < currentCol) {\n          currentCol -= 1\n        }\n\n        if (window.event.buttons === 1) {\n          var currBox = document.getElementById('row' + currentRow + 'col' + currentCol)\n          if (!(currBox.classList.contains('start') || currBox.classList.contains('end'))) {\n            currBox.classList.add('barrier')\n          }\n        }\n        else if (window.event.buttons === 2) {\n          document.getElementById('row' + currentRow + 'col' + currentCol).className = ''\n        }\n      } while (currentRow !== row || currentCol !== col);\n      lastClickedCoords = [row, col]\n    }\n    else {\n      lastClickedCoords = null\n    }\n  }\n\n  // QUEUE TESTING\n  // var queue = new PriorityQueue()\n  // queue.queue('owen')\n  // console.log(queue.length)\n  // console.log(queue.peek())\n  // console.log(queue.dequeue())\n  // console.log(queue.peek())\n\n\n  // no context menu, reload button pops up on resize\n  window.addEventListener('contextmenu', e => e.preventDefault())\n  window.addEventListener('resize', e => document.getElementById('resizeAlert').style.display = 'block')\n\n\n  // RENDERING\n\n  // default cell size\n  var boxSize = 20\n  // used to trace the mouse, as the events don't trigger fast enough for me :/\n  var lastClickedCoords = null\n\n  var gridHeight = Math.floor((window.innerHeight-70) / boxSize)\n  var gridWidth = Math.floor((window.innerWidth) / boxSize)\n\n  function getGrid(){\n    var grid = []\n    for (let row = 0; row < gridHeight; row++) {\n      grid.push([])\n      for (let col = 0; col < gridWidth; col++) {\n        grid[row].push(<Box row={row} col={col} boxSize={boxSize} />)\n      }\n    }\n    return(grid)\n  }\n\n  return (\n    <div className=\"App\" style={{ userSelect: 'none' }}>\n      <div id='header'>\n        <p className='algorithm' onClick={() => startAlgorithm(depthFirstSearch)}>Depth First Search</p>\n        <p className='algorithm' onClick={() => startAlgorithm(breadthFirstSearch)}>Breadth First Search</p>\n      </div>\n      <div id='grid' onMouseMove={e => paint(e)} onMouseDown={e => paint(e, true)}>\n        {getGrid().map((row, key) => {\n          return (\n            <div className='row' id={key}>\n              {row.map((element) => {\n                return (element)\n              })}\n            </div>\n          )\n        })}\n      </div>\n      <span id='resizeAlert' onClick={() => window.location.reload()}>Looks like you resized your window. <br/> Click here to reset the grid</span>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}