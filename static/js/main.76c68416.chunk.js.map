{"version":3,"sources":["Box.js","Queue.js","App.js","index.js"],"names":["Box","props","id","row","col","style","border","height","boxSize","toString","width","Queue","this","elements","prototype","add","e","push","dequeue","shift","isEmpty","length","App","getCoords","element","getAttribute","parseInt","getElement","coords","document","getElementById","getNeighbors","filter","a","breadthFirstSearch","start","getElementsByClassName","end","nextQueue","nextQueueHash","Set","cameFrom","intr","setInterval","clearInterval","currentNode","neighbors","i","neighbor","classList","contains","has","remove","lastClickedCoords","paint","clickOverride","Math","floor","clientX","clientY","window","event","buttons","endNode","currentRow","currentCol","currBox","className","addEventListener","preventDefault","innerWidth","innerHeight","grid","userSelect","map","key","position","bottom","right","onClick","algorithm","blankElements","name","Array","from","forEach","startAlgorithm","ReactDOM","render","StrictMode"],"mappings":"4LACe,SAASA,EAAIC,GACxB,OACI,qBAAKC,GAAI,MAAMD,EAAME,IAAI,MAAMF,EAAMG,IAAKD,IAAKF,EAAME,IAAKC,IAAKH,EAAMG,IAAKC,MAAO,CAE7EC,OAAQ,kBACRC,QAASN,EAAMO,QAAQ,GAAGC,WAAa,KACvCC,OAAQT,EAAMO,QAAQ,GAAGC,WAAa,Q,MCPnC,SAASE,IACpBC,KAAKC,SAAW,GAEhBF,EAAMG,UAAUC,IAAM,SAASC,GAC3BJ,KAAKC,SAASI,KAAKD,IAGvBL,EAAMG,UAAUI,QAAU,WACtB,OAAON,KAAKC,SAASM,SAGzBR,EAAMG,UAAUM,QAAU,WACtB,OAAgC,IAAzBR,KAAKC,SAASQ,QCPd,SAASC,IAEtB,SAASC,EAAUC,GACjB,IAAIrB,EAAMqB,EAAQC,aAAa,OAC3BrB,EAAMoB,EAAQC,aAAa,OAG/B,MAAQ,CAFRtB,EAAMuB,SAASvB,GACfC,EAAMsB,SAAStB,IAIjB,SAASuB,EAAWC,GAClB,IAAI,EAAJ,YAAiBA,EAAjB,GAAKzB,EAAL,KAAUC,EAAV,KACA,OAAQyB,SAASC,eAAe,MAAQ3B,EAAM,MAAQC,GAoBxD,SAAS2B,EAAaP,GACpB,IAAI,EAAaD,EAAUC,GAA3B,mBAAKrB,EAAL,KAAUC,EAAV,KACIS,EAAW,GAOf,OANAA,EAASI,KAAKU,EAAW,CAACxB,EAAM,EAAGC,KACnCS,EAASI,KAAKU,EAAW,CAACxB,EAAM,EAAGC,KACnCS,EAASI,KAAKU,EAAW,CAACxB,EAAKC,EAAM,KACrCS,EAASI,KAAKU,EAAW,CAACxB,EAAKC,EAAM,KACrCS,EAAWA,EAASmB,QAAO,SAACC,GAAD,OAAOA,KAsDpC,SAASC,IAEP,IAAIC,EAAQN,SAASO,uBAAuB,SAAS,GACjDC,EAAMR,SAASO,uBAAuB,OAAO,GAE7CE,EAAY,IAAI3B,EACpB2B,EAAUvB,IAAIoB,GACd,IAAII,EAAgB,IAAIC,IAEpBC,EAAW,GAEXC,EAAOC,aAAY,WAErB,GAAIL,EAAUlB,UACZwB,cAAcF,OADhB,CASA,IAJA,IAAIG,EAAcP,EAAUpB,UAExB4B,EAAYf,EAAac,GAEpBE,EAAI,EAAGA,EAAID,EAAUzB,OAAQ0B,IAAK,CACzC,IAAIC,EAAWF,EAAUC,GACzB,KAAIC,EAASC,UAAUC,SAAS,WAAaF,EAASC,UAAUC,SAAS,YAAcX,EAAcY,IAAIH,MAGzGV,EAAUvB,IAAIiC,GACdT,EAAcxB,IAAIiC,GAClBA,EAASC,UAAUlC,IAAI,QACvB0B,EAASlB,EAAUyB,IAAaH,EAE5BG,IAAaX,GAAI,CACnB,KAAOW,IAAab,GAClBM,EAASlB,EAAUyB,IAAWC,UAAUlC,IAAI,QAC5C0B,EAASlB,EAAUyB,IAAWC,UAAUG,OAAO,UAC/CX,EAASlB,EAAUyB,IAAWC,UAAUG,OAAO,QAC/CJ,EAAWP,EAASlB,EAAUyB,IAGlC,YADEJ,cAAcF,IAKlBG,EAAYI,UAAUG,OAAO,QAC7BP,EAAYI,UAAUlC,IAAI,aACzB,IAUL,IAAIP,EAAU,GACV6C,EAAoB,KAGxB,SAASC,EAAMtC,GAA2B,IAAxBuC,EAAuB,wDAEnCnD,EAAMoD,KAAKC,MAAMzC,EAAE0C,QAAUlD,GAC7BL,EAAMqD,KAAKC,MAAMzC,EAAE2C,QAAUnD,GAEjC,GAA6B,IAAzBoD,OAAOC,MAAMC,SAAiBP,EAAe,CAG/C,GAAwD,IAApD1B,SAASO,uBAAuB,SAASf,SAA0C,IAAzBuC,OAAOC,MAAMC,SAAiBP,GAE1F,YADA1B,SAASC,eAAe,MAAQ3B,EAAM,MAAQC,GAAK6C,UAAUlC,IAAI,SAGnE,GAAsD,IAAlDc,SAASO,uBAAuB,OAAOf,SAA0C,IAAzBuC,OAAOC,MAAMC,SAAiBP,GAAgB,CACxG,IAAIQ,EAAUlC,SAASC,eAAe,MAAQ3B,EAAM,MAAQC,GAC5D,GAAI2D,EAAQd,UAAUC,SAAS,SAC7B,OAGF,YADAa,EAAQd,UAAUlC,IAAI,OAKxB,GAAKsC,EAKHW,EAAaX,EAAkB,GAC/BY,EAAaZ,EAAkB,QAL/B,IAAIW,EAAa7D,EACb8D,EAAa7D,EAOnB,GAcE,GAbID,EAAM6D,EACRA,GAAc,EAEP7D,EAAM6D,IACbA,GAAc,GAEZ5D,EAAM6D,EACRA,GAAc,EAEP7D,EAAM6D,IACbA,GAAc,GAGa,IAAzBL,OAAOC,MAAMC,QAAe,CAC9B,IAAII,EAAUrC,SAASC,eAAe,MAAQkC,EAAa,MAAQC,GACnE,IAAKC,EACH,OAEIA,EAAQjB,UAAUC,SAAS,UAAYgB,EAAQjB,UAAUC,SAAS,QACtEgB,EAAQjB,UAAUlC,IAAI,gBAGQ,IAAzB6C,OAAOC,MAAMC,UACpBjC,SAASC,eAAe,MAAQkC,EAAa,MAAQC,GAAYE,UAAY,UAExEH,IAAe7D,GAAO8D,IAAe7D,GAC9CiD,EAAoB,CAAClD,EAAKC,QAG1BiD,EAAoB,KAKxBO,OAAOQ,iBAAiB,eAAe,SAAApD,GAAC,OAAIA,EAAEqD,oBAG9CT,OAAOQ,iBAAiB,aAAa,SAACpD,GAAD,OAAOsC,EAAMtC,MAClD4C,OAAOQ,iBAAiB,aAAa,SAACpD,GAAD,OAAOsC,EAAMtC,GAAG,MAMrD,IAJA,IAAIN,EAAQkD,OAAOU,WAAa9D,EAC5BD,EAASqD,OAAOW,YAAc/D,EAE9BgE,EAAO,GACFrE,EAAM,EAAGA,EAAMI,EAAQJ,IAAO,CACrCqE,EAAKvD,KAAK,IACV,IAAK,IAAIb,EAAM,EAAGA,EAAMM,EAAON,IAC7BoE,EAAKrE,GAAKc,KAAK,cAACjB,EAAD,CAAKG,IAAKA,EAAKC,IAAKA,EAAKI,QAASA,KAIrD,OACE,sBAAK2D,UAAU,MAAM9D,MAAO,CAAEoE,WAAY,QAA1C,UACE,qBAAKvE,GAAG,OAAR,SACGsE,EAAKE,KAAI,SAACvE,EAAKwE,GACd,OACE,qBAAKR,UAAU,MAAMjE,GAAIyE,EAAzB,SACGxE,EAAIuE,KAAI,SAAClD,GACR,OAAQA,YAOlB,wBAAQnB,MAAO,CAAEuE,SAAU,WAAYC,OAAQ,OAAQC,MAAO,QAAUC,QAAS,kBA3OrF,SAAwBC,GAEtB,SAASC,EAAcpE,EAAUqE,GAC/BC,MAAMC,KAAKvE,GAAUwE,SAAQ,SAAA7D,GACrBA,EAAQyB,UAAUC,SAAS,UAAY1B,EAAQyB,UAAUC,SAAS,QACtE1B,EAAQyB,UAAUG,OAAO8B,MAI/BrD,SAASO,uBAAuB,SAAS,GAAGa,UAAY,QACxDpB,SAASO,uBAAuB,OAAO,GAAGa,UAAY,MACtDgC,EAAcpD,SAASO,uBAAuB,UAAW,UACzD6C,EAAcpD,SAASO,uBAAuB,QAAS,QACvD6C,EAAcpD,SAASO,uBAAuB,QAAS,QACvD4C,IA6NyFM,CAAepD,IAAtG,oCC3PNqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnE,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.76c68416.chunk.js","sourcesContent":["\r\nexport default function Box(props){\r\n    return(\r\n        <div id={'row'+props.row+\"col\"+props.col} row={props.row} col={props.col} style={{\r\n            // backgroundColor: 'grey',\r\n            border: '1px solid black',\r\n            height: (props.boxSize-2).toString() + 'px',\r\n            width: (props.boxSize-2).toString() + 'px'\r\n        }}></div>\r\n    )\r\n}","export default function Queue() {\r\n    this.elements = []\r\n\r\n    Queue.prototype.add = function(e) {\r\n        this.elements.push(e)\r\n    }\r\n\r\n    Queue.prototype.dequeue = function () {\r\n        return this.elements.shift()\r\n    }\r\n\r\n    Queue.prototype.isEmpty = function () {\r\n        return this.elements.length === 0\r\n    }\r\n}","import PriorityQueue from 'js-priority-queue'\nimport Box from './Box.js'\nimport './styles.css'\nimport Queue from './Queue'\n\nexport default function App() {\n\n  function getCoords(element) {\n    var row = element.getAttribute('row')\n    var col = element.getAttribute('col')\n    row = parseInt(row)\n    col = parseInt(col)\n    return ([row, col])\n  }\n\n  function getElement(coords) {\n    var [row, col] = coords\n    return (document.getElementById('row' + row + 'col' + col))\n  }\n\n  function startAlgorithm(algorithm) {\n\n    function blankElements(elements, name) {\n      Array.from(elements).forEach(element => {\n        if (!(element.classList.contains('start') || element.classList.contains('end'))) {\n          element.classList.remove(name)\n        }\n      })\n    }\n    document.getElementsByClassName('start')[0].classList = 'start'\n    document.getElementsByClassName('end')[0].classList = 'end'\n    blankElements(document.getElementsByClassName('closed'), 'closed')\n    blankElements(document.getElementsByClassName('path'), 'path')\n    blankElements(document.getElementsByClassName('open'), 'open')\n    algorithm()\n  }\n\n  function getNeighbors(element) {\n    var [row, col] = getCoords(element)\n    var elements = []\n    elements.push(getElement([row + 1, col]))\n    elements.push(getElement([row - 1, col]))\n    elements.push(getElement([row, col + 1]))\n    elements.push(getElement([row, col - 1]))\n    elements = elements.filter((a) => a)\n\n    return (elements)\n  }\n\n  function depthFirstSearch() {\n\n    var start = document.getElementsByClassName('start')[0]\n    var end = document.getElementsByClassName('end')[0]\n\n    var lifo = require('stack-lifo')\n    var stack = new lifo()\n    stack.push(start)\n\n    var cameFrom = {}\n    var closed = new Set()\n\n    var intr = setInterval(function () {\n\n      var currentNode = stack.pop()\n\n      while (closed.has(currentNode)) {\n        currentNode = stack.pop()\n        if (stack.isEmpty()) {\n          clearInterval(intr);\n          return\n        }\n      }\n\n      closed.add(currentNode)\n      currentNode.classList.add('closed')\n\n      var neighbors = getNeighbors(currentNode)\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier')) {\n          continue\n        }\n        cameFrom[getCoords(neighbor)] = currentNode\n        stack.push(neighbor)\n      }\n      if (stack.isEmpty()) clearInterval(intr);\n      if (currentNode === end) {\n        while (currentNode !== start) {\n          cameFrom[getCoords(currentNode)].classList.add('path')\n          cameFrom[getCoords(currentNode)].classList.remove('closed')\n          currentNode = cameFrom[getCoords(currentNode)]\n        }\n        clearInterval(intr)\n        return\n      }\n    }, 10)\n  }\n\n  function breadthFirstSearch() {\n\n    var start = document.getElementsByClassName('start')[0]\n    var end = document.getElementsByClassName('end')[0]\n\n    var nextQueue = new Queue()\n    nextQueue.add(start)\n    var nextQueueHash = new Set()\n\n    var cameFrom = {}\n\n    var intr = setInterval(function () {\n\n      if (nextQueue.isEmpty()) {\n        clearInterval(intr)\n        return\n      }\n\n      var currentNode = nextQueue.dequeue()\n\n      var neighbors = getNeighbors(currentNode)\n\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier') || nextQueueHash.has(neighbor)) {\n          continue\n        }\n        nextQueue.add(neighbor)\n        nextQueueHash.add(neighbor)\n        neighbor.classList.add('open')\n        cameFrom[getCoords(neighbor)] = currentNode\n        \n        if (neighbor === end){\n          while (neighbor !== start) {\n            cameFrom[getCoords(neighbor)].classList.add('path')\n            cameFrom[getCoords(neighbor)].classList.remove('closed')\n            cameFrom[getCoords(neighbor)].classList.remove('open')\n            neighbor = cameFrom[getCoords(neighbor)]\n          }\n          clearInterval(intr)\n        return\n        }\n      }\n\n      currentNode.classList.remove('open')\n      currentNode.classList.add('closed')\n    }, 10)\n  }\n\n  // var queue = new PriorityQueue()\n  // queue.queue('owen')\n  // console.log(queue.length)\n  // console.log(queue.peek())\n  // console.log(queue.dequeue())\n  // console.log(queue.peek())\n\n  var boxSize = 20\n  var lastClickedCoords = null\n\n  // click override is basically just saying it was a click event and not mouse movement, so it doesnt pass a button, we have to manually set it\n  function paint(e, clickOverride = false) {\n\n    var col = Math.floor(e.clientX / boxSize)\n    var row = Math.floor(e.clientY / boxSize)\n\n    if (window.event.buttons !== 0 || clickOverride) {\n\n      // check to see if start and end exist, and if not and left clicking place them\n      if (document.getElementsByClassName('start').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        document.getElementById('row' + row + 'col' + col).classList.add('start')\n        return\n      }\n      if (document.getElementsByClassName('end').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        var endNode = document.getElementById('row' + row + 'col' + col)\n        if (endNode.classList.contains('start')) {\n          return\n        }\n        endNode.classList.add('end')\n        return\n      }\n\n      // paint the boxes when clicked, including the ones inbetween cuz it doesnt fire enough\n      if (!lastClickedCoords) {\n        var currentRow = row\n        var currentCol = col\n      }\n      else {\n        currentRow = lastClickedCoords[0]\n        currentCol = lastClickedCoords[1]\n      }\n\n      do {\n        if (row > currentRow) {\n          currentRow += 1\n        }\n        else if (row < currentRow) {\n          currentRow -= 1\n        }\n        if (col > currentCol) {\n          currentCol += 1\n        }\n        else if (col < currentCol) {\n          currentCol -= 1\n        }\n\n        if (window.event.buttons === 1) {\n          var currBox = document.getElementById('row' + currentRow + 'col' + currentCol)\n          if (!currBox) {\n            return\n          }\n          if (!(currBox.classList.contains('start') || currBox.classList.contains('end'))) {\n            currBox.classList.add('barrier')\n          }\n        }\n        else if (window.event.buttons === 2) {\n          document.getElementById('row' + currentRow + 'col' + currentCol).className = ''\n        }\n      } while (currentRow !== row || currentCol !== col);\n      lastClickedCoords = [row, col]\n    }\n    else {\n      lastClickedCoords = null\n    }\n  }\n\n  // right clicking does not pull up context menu\n  window.addEventListener('contextmenu', e => e.preventDefault())\n\n  // when the mouse moves, check if any buttons are pressed, if so react\n  window.addEventListener('mousemove', (e) => paint(e))\n  window.addEventListener('mousedown', (e) => paint(e, true))\n\n  var width = window.innerWidth / boxSize\n  var height = window.innerHeight / boxSize\n\n  var grid = []\n  for (let row = 0; row < height; row++) {\n    grid.push([])\n    for (let col = 0; col < width; col++) {\n      grid[row].push(<Box row={row} col={col} boxSize={boxSize} />)\n    }\n  }\n\n  return (\n    <div className=\"App\" style={{ userSelect: 'none' }}>\n      <div id='grid'>\n        {grid.map((row, key) => {\n          return (\n            <div className='row' id={key}>\n              {row.map((element) => {\n                return (element)\n              })}\n            </div>\n          )\n        })}\n      </div>\n\n      <button style={{ position: 'absolute', bottom: \"10px\", right: '10px' }} onClick={() => startAlgorithm(breadthFirstSearch)}>\n        go go power rangers\n      </button>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}