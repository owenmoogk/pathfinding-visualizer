{"version":3,"sources":["Box.js","App.js","index.js"],"names":["Box","props","id","row","col","style","border","height","boxSize","toString","width","App","window","addEventListener","e","preventDefault","Math","floor","clientX","clientY","box","document","getElementById","event","buttons","classList","add","remove","innerWidth","innerHeight","grid","push","className","userSelect","map","key","element","ReactDOM","render","StrictMode"],"mappings":"yJACe,SAASA,EAAIC,GACxB,OACI,qBAAKC,GAAI,MAAMD,EAAME,IAAI,MAAMF,EAAMG,IAAKD,IAAKF,EAAME,IAAKC,IAAKH,EAAMG,IAAKC,MAAO,CAE7EC,OAAQ,kBACRC,QAASN,EAAMO,QAAQ,GAAGC,WAAa,KACvCC,OAAQT,EAAMO,QAAQ,GAAGC,WAAa,Q,KCFnC,SAASE,IAEtB,IAAIH,EAAU,GAIdI,OAAOC,iBAAiB,eAAe,SAAAC,GAAC,OAAIA,EAAEC,oBAG9CH,OAAOC,iBAAiB,aAAa,SAACC,GACpC,IAAIV,EAAMY,KAAKC,MAAMH,EAAEI,QAAUV,GAC7BL,EAAMa,KAAKC,MAAMH,EAAEK,QAAUX,GAC7BY,EAAMC,SAASC,eAAe,MAAQnB,EAAM,MAAQC,GAwB5B,GAAxBQ,OAAOW,MAAMC,SACfJ,EAAIK,UAAUC,IAAI,WACDN,GAEc,GAAxBR,OAAOW,MAAMC,SACpBJ,EAAIK,UAAUE,OAAO,WACJP,GAGA,QAIjBZ,EAAUA,EAMd,IANA,IAEIE,EAAQE,OAAOgB,WAAapB,EAC5BD,EAASK,OAAOiB,YAAcrB,EAE9BsB,EAAO,GACF3B,EAAM,EAAGA,EAAMI,EAAQJ,IAAO,CACrC2B,EAAKC,KAAK,IACV,IAAK,IAAI3B,EAAM,EAAGA,EAAMM,EAAON,IAC7B0B,EAAK3B,GAAK4B,KAAK,cAAC/B,EAAD,CAAKG,IAAKA,EAAKC,IAAKA,EAAKI,QAASA,KAIrD,OACE,qBAAKwB,UAAU,MAAM3B,MAAO,CAAE4B,WAAY,QAA1C,SACE,qBAAK/B,GAAG,OAAR,SACG4B,EAAKI,KAAI,SAAC/B,EAAKgC,GACd,OACE,qBAAKH,UAAU,MAAM9B,GAAIiC,EAAzB,SACGhC,EAAI+B,KAAI,SAACE,GACR,OAAQA,cCtExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAD,MAEFU,SAASC,eAAe,U","file":"static/js/main.0c0565a0.chunk.js","sourcesContent":["\r\nexport default function Box(props){\r\n    return(\r\n        <div id={'row'+props.row+\"col\"+props.col} row={props.row} col={props.col} style={{\r\n            // backgroundColor: 'grey',\r\n            border: '1px solid black',\r\n            height: (props.boxSize-2).toString() + 'px',\r\n            width: (props.boxSize-2).toString() + 'px'\r\n        }}></div>\r\n    )\r\n}","import { useState } from 'react'\nimport Box from './Box.js'\nimport './styles.css'\n\n\nexport default function App() {\n\n  var boxSize = 20\n  var lastClickedBox = null\n\n  // right clicking does not pull up context menu\n  window.addEventListener('contextmenu', e => e.preventDefault())\n\n  // when the mouse moves, check if any buttons are pressed, if so react\n  window.addEventListener('mousemove', (e) => {\n    var col = Math.floor(e.clientX / boxSize)\n    var row = Math.floor(e.clientY / boxSize)\n    var box = document.getElementById('row' + row + 'col' + col)\n    \n    // paint the boxes inbetween\n    // if (lastClickedBox != null){\n    //   var currentRow = parseInt(lastClickedBox.getAttribute('row'))\n    //   var currentCol = parseInt(lastClickedBox.getAttribute('col'))\n    //   while (currentRow != row && currentCol != col){\n    //     if (row > currentRow){\n    //       currentRow += 1\n    //     }\n    //     else if (row < currentRow){\n    //       currentRow -= 1\n    //     }\n    //     if (col > currentCol){\n    //       currentCol += 1\n    //     }\n    //     else if (col < currentRow){\n    //       currentCol -= 1\n    //     }\n    //     console.log(currentRow, currentCol)\n    //     document.getElementById('row'+currentRow+'col'+currentCol).classList.add('barrier')\n    //   }\n    // }\n\n    if (window.event.buttons == 1) {\n      box.classList.add('barrier')\n      lastClickedBox = box\n    }\n    else if (window.event.buttons == 2) {\n      box.classList.remove('barrier')\n      lastClickedBox = box\n    }\n    else{\n      lastClickedBox = null\n    }\n  })\n\n  var boxSize = boxSize\n\n  var width = window.innerWidth / boxSize\n  var height = window.innerHeight / boxSize\n\n  var grid = []\n  for (let row = 0; row < height; row++) {\n    grid.push([])\n    for (let col = 0; col < width; col++) {\n      grid[row].push(<Box row={row} col={col} boxSize={boxSize} />)\n    }\n  }\n\n  return (\n    <div className=\"App\" style={{ userSelect: 'none' }}>\n      <div id='grid'>\n        {grid.map((row, key) => {\n          return (\n            <div className='row' id={key}>\n              {row.map((element) => {\n                return (element)\n              })}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}