{"version":3,"sources":["Box.js","Queue.js","PriorityQueue.js","App.js","index.js"],"names":["Box","props","id","row","col","style","border","height","boxSize","toString","width","Queue","this","elements","prototype","add","e","push","dequeue","shift","isEmpty","length","QElement","priority","priority2","element","PriorityQueue","items","qElement","contain","i","splice","App","running","interval","undefined","getCoords","getAttribute","parseInt","getElement","coords","document","getElementById","getNeighbors","filter","a","stopInterval","clearInterval","color","paint","clickOverride","Math","floor","clientX","window","innerWidth","offsetWidth","getElementsByClassName","childNodes","clientY","event","buttons","classList","endNode","contains","lastClickedCoords","currentRow","currentCol","currBox","className","addEventListener","preventDefault","display","gridHeight","innerHeight","gridWidth","functionKeys","start","end","stack","require","cameFrom","closed","Set","setInterval","currentNode","pop","has","neighbors","neighbor","remove","nextQueue","nextQueueHash","h","point1","point2","row1","col1","row2","col2","abs","openSet","put","openSetHash","gScore","fScore","found","get","delete","tempGScore","currGScore","Infinity","userSelect","onClick","algorithmFunction","value","blankElements","name","Array","from","forEach","startAlgorithm","onMouseMove","onMouseDown","grid","getGrid","map","key","location","reload","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c26834cb.chunk.js","sourcesContent":["\r\nexport default function Box(props){\r\n    return(\r\n        <div id={'row'+props.row+\"col\"+props.col} row={props.row} col={props.col} style={{\r\n            // backgroundColor: 'grey',\r\n            border: '1px solid black',\r\n            height: (props.boxSize-2).toString() + 'px',\r\n            width: (props.boxSize-2).toString() + 'px'\r\n        }}></div>\r\n    )\r\n}","export default function Queue() {\r\n    this.elements = []\r\n\r\n    Queue.prototype.add = function(e) {\r\n        this.elements.push(e)\r\n    }\r\n\r\n    Queue.prototype.dequeue = function () {\r\n        return this.elements.shift()\r\n    }\r\n\r\n    Queue.prototype.isEmpty = function () {\r\n        return this.elements.length === 0\r\n    }\r\n}","// https://www.geeksforgeeks.org/implementation-priority-queue-javascript/\r\n\r\n// User defined class\r\n// to store element and its priority\r\nclass QElement {\r\n    constructor(priority, priority2, element) {\r\n        this.element = element;\r\n        this.priority = priority;\r\n        this.priority2 = priority2\r\n    }\r\n}\r\n\r\n// PriorityQueue class\r\nexport default class PriorityQueue {\r\n\r\n    // An array is used to implement priority\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    // functions to be implemented\r\n    // put(item, priority)\r\n    // dequeue()\r\n    // front()\r\n    // isEmpty()\r\n    // printPQueue()\r\n\r\n\r\n    put(priority, priority2, element) {\r\n        // creating object from queue element\r\n        var qElement = new QElement(priority, priority2, element);\r\n        var contain = false;\r\n\r\n        // iterating through the entire\r\n        // item array to add element at the\r\n        // correct location of the Queue\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if ((this.items[i].priority > qElement.priority) || (this.items[i].priority === qElement.priority && this.items[i].priority2 > qElement.priority2)) {\r\n                this.items.splice(i, 0, qElement);\r\n                contain = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // if the element have the highest priority\r\n        // it is added at the end of the queue\r\n        if (!contain) {\r\n            this.items.push(qElement);\r\n        }\r\n    }\r\n\r\n    get() {\r\n        // return the dequeued element\r\n        // and remove it.\r\n        // if the queue is empty\r\n        // returns Underflow\r\n        if (this.isEmpty())\r\n            return \"Underflow\";\r\n        return this.items.shift().element;\r\n    }\r\n    front() {\r\n        // returns the highest priority element\r\n        // in the Priority queue without removing it.\r\n        if (this.isEmpty())\r\n            return \"No elements in Queue\";\r\n        return this.items[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        // return true if the queue is empty.\r\n        return this.items.length === 0;\r\n    }\r\n\r\n    look() {\r\n        return(this.items)\r\n    }\r\n}","import Box from './Box.js'\nimport './styles.css'\nimport Queue from './Queue'\nimport PriorityQueue from './PriorityQueue.js'\n\nexport default function App() {\n\n  // keep track of weather or not it is running\n  var running;\n\n  // timing for visualizations\n  var interval = undefined;\n\n  // getting grid coords from cell element\n  function getCoords(element) {\n    var row = element.getAttribute('row')\n    var col = element.getAttribute('col')\n    row = parseInt(row)\n    col = parseInt(col)\n    return ([row, col])\n  }\n\n  // getting cell element from grid coords\n  function getElement(coords) {\n    var [row, col] = coords\n    return (document.getElementById('row' + row + 'col' + col))\n  }\n\n  // clears the used squares before running, checks start and end, passed the function to call.\n  function startAlgorithm(functionKeys) {\n    if (running) {\n      return\n    }\n\n    running = true\n    var algorithmFunction = functionKeys[document.getElementById('algorithm').value]\n\n    function blankElements(elements, name) {\n      Array.from(elements).forEach(element => element.classList.remove(name))\n    }\n    try {\n      var start = document.getElementsByClassName('start')[0]\n      var end = document.getElementsByClassName('end')[0]\n      start.classList = 'start'\n      end.classList = 'end'\n    }\n    catch {\n      return\n    }\n    blankElements(document.getElementsByClassName('closed'), 'closed')\n    blankElements(document.getElementsByClassName('path'), 'path')\n    blankElements(document.getElementsByClassName('open'), 'open')\n    document.getElementById('goButton').style.color = 'grey'\n    algorithmFunction(start, end)\n  }\n\n  // get the given neighbors of a cell.. this includes barriers and closed nodes so have to filter in the function\n  function getNeighbors(element) {\n    var [row, col] = getCoords(element)\n    var elements = []\n    elements.push(getElement([row + 1, col]))\n    elements.push(getElement([row - 1, col]))\n    elements.push(getElement([row, col + 1]))\n    elements.push(getElement([row, col - 1]))\n    elements = elements.filter((a) => a)\n\n    return (elements)\n  }\n\n  // stop the interval from running when the algorithm is done\n  function stopInterval() {\n    clearInterval(interval)\n    running = false\n    document.getElementById('goButton').style.color = ''\n  }\n\n  // depth first search algorithm\n  function depthFirstSearch(start, end) {\n\n    var lifo = require('stack-lifo')\n    var stack = new lifo()\n    stack.push(start)\n\n    var cameFrom = {}\n    var closed = new Set()\n\n    interval = setInterval(function () {\n\n      var currentNode = stack.pop()\n\n      while (closed.has(currentNode)) {\n        currentNode = stack.pop()\n        if (stack.isEmpty()) {\n          stopInterval();\n          return\n        }\n      }\n\n      closed.add(currentNode)\n      currentNode.classList.add('closed')\n\n      var neighbors = getNeighbors(currentNode)\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier')) {\n          continue\n        }\n        cameFrom[getCoords(neighbor)] = currentNode\n        stack.push(neighbor)\n      }\n      if (stack.isEmpty()) stopInterval();\n      if (currentNode === end) {\n        while (currentNode !== start) {\n          cameFrom[getCoords(currentNode)].classList.add('path')\n          cameFrom[getCoords(currentNode)].classList.remove('closed')\n          currentNode = cameFrom[getCoords(currentNode)]\n        }\n        stopInterval()\n        return\n      }\n    }, 10)\n  }\n\n  // breadth first search algorithm\n  function breadthFirstSearch(start, end) {\n\n    var nextQueue = new Queue()\n    nextQueue.add(start)\n    var nextQueueHash = new Set()\n\n    var cameFrom = {}\n\n    interval = setInterval(function () {\n\n      if (nextQueue.isEmpty()) {\n        stopInterval()\n        return\n      }\n\n      var currentNode = nextQueue.dequeue()\n\n      var neighbors = getNeighbors(currentNode)\n\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('closed') || neighbor.classList.contains('barrier') || nextQueueHash.has(neighbor)) {\n          continue\n        }\n        nextQueue.add(neighbor)\n        nextQueueHash.add(neighbor)\n        neighbor.classList.add('open')\n        cameFrom[getCoords(neighbor)] = currentNode\n\n        if (neighbor === end) {\n          while (neighbor !== start) {\n            cameFrom[getCoords(neighbor)].classList.add('path')\n            cameFrom[getCoords(neighbor)].classList.remove('closed')\n            cameFrom[getCoords(neighbor)].classList.remove('open')\n            neighbor = cameFrom[getCoords(neighbor)]\n          }\n          stopInterval()\n          return\n        }\n      }\n\n      currentNode.classList.remove('open')\n      currentNode.classList.add('closed')\n    }, 10)\n  }\n\n  // astar search algorithm\n  function astar(start, end) {\n\n    // heuristic function\n    function h(point1, point2) {\n      var [row1, col1] = getCoords(point1)\n      var [row2, col2] = getCoords(point2)\n      return (Math.abs(row1 - row2) + Math.abs(col1 - col2))\n    }\n\n    var openSet = new PriorityQueue()\n    openSet.put(0, 0, start)\n    var openSetHash = new Set()\n    openSetHash.add(start)\n\n    var cameFrom = {}\n\n    var gScore = {}\n    var fScore = {}\n\n    gScore[getCoords(start)] = 0\n    fScore[getCoords(start)] = h(start, end)\n\n    interval = setInterval(function () {\n\n      if (openSet.isEmpty()) {\n        stopInterval()\n        return\n      }\n      \n      var currentNode;\n      var found = false;\n      while (!found){\n        currentNode = openSet.get()\n        found = openSetHash.delete(currentNode)\n      }\n\n      if (currentNode === end) {\n        while (currentNode !== start) {\n          cameFrom[getCoords(currentNode)].classList.add('path')\n          cameFrom[getCoords(currentNode)].classList.remove('closed')\n          cameFrom[getCoords(currentNode)].classList.remove('open')\n          currentNode = cameFrom[getCoords(currentNode)]\n        }\n        stopInterval()\n        return\n      }\n\n      var neighbors = getNeighbors(currentNode)\n      for (let i = 0; i < neighbors.length; i++) {\n        var neighbor = neighbors[i]\n        if (neighbor.classList.contains('barrier')) {\n          continue\n        }\n\n        var tempGScore = gScore[getCoords(currentNode)] + 1\n        var currGScore = gScore[getCoords(neighbor)]\n        if (!currGScore) {\n          currGScore = Infinity\n        }\n\n        if (tempGScore < currGScore) {\n          cameFrom[getCoords(neighbor)] = currentNode\n\n          gScore[getCoords(neighbor)] = tempGScore\n          fScore[getCoords(neighbor)] = tempGScore + h(neighbor, end)\n\n          openSet.put(fScore[getCoords(neighbor)], h(neighbor, end), neighbor)\n          openSetHash.add(neighbor)\n          neighbor.classList.add('open')\n        }\n\n      }\n\n      currentNode.classList.remove('open')\n      currentNode.classList.add('closed')\n    }, 10)\n\n  }\n\n  function dijkstras(start, end) {\n\n    var distances = {}\n    var previous = {}\n\n    function getDistance(point1, point2) {\n      var [row1, col1] = getCoords(point1)\n      var [row2, col2] = getCoords(point2)\n      return (Math.abs(row1 - row2) + Math.abs(col1 - col2))\n    }\n\n    var priority = new PriorityQueue()\n    priority.put(0,0,start)\n\n\n  }\n\n  // paint function takes a event and paints color onto the screen\n  // click override is just saying it was a click event and not mouse movement, so it doesnt pass a button, we have to manually set it\n  function paint(e, clickOverride = false) {\n\n    // big math to figure out which cell the mouse is over\n    var col = Math.floor((e.clientX - ((window.innerWidth - document.getElementById('grid').offsetWidth) / 2)) / document.getElementsByClassName('row')[0].childNodes[0].offsetWidth)\n    var row = Math.floor((e.clientY - 60) / boxSize)\n\n    if (window.event.buttons !== 0 || clickOverride) {\n\n      var element = document.getElementById('row' + row + 'col' + col)\n      if (!element) {\n        return\n      }\n\n      // check to see if start and end exist, and if not and left clicking place them\n      if (document.getElementsByClassName('start').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        document.getElementById('row' + row + 'col' + col).classList.add('start')\n        return\n      }\n      if (document.getElementsByClassName('end').length === 0 && (window.event.buttons === 1 || clickOverride)) {\n        var endNode = document.getElementById('row' + row + 'col' + col)\n        if (endNode.classList.contains('start')) {\n          return\n        }\n        endNode.classList.add('end')\n        return\n      }\n\n      // paint the boxes when clicked, including the ones inbetween cuz it doesnt fire enough\n      if (!lastClickedCoords) {\n        var currentRow = row\n        var currentCol = col\n      }\n      else {\n        currentRow = lastClickedCoords[0]\n        currentCol = lastClickedCoords[1]\n      }\n\n      do {\n        if (row > currentRow) {\n          currentRow += 1\n        }\n        else if (row < currentRow) {\n          currentRow -= 1\n        }\n        if (col > currentCol) {\n          currentCol += 1\n        }\n        else if (col < currentCol) {\n          currentCol -= 1\n        }\n\n        if (window.event.buttons === 1) {\n          var currBox = document.getElementById('row' + currentRow + 'col' + currentCol)\n          if (!(currBox.classList.contains('start') || currBox.classList.contains('end'))) {\n            currBox.classList.add('barrier')\n          }\n        }\n        else if (window.event.buttons === 2) {\n          document.getElementById('row' + currentRow + 'col' + currentCol).className = ''\n        }\n      } while (currentRow !== row || currentCol !== col);\n      lastClickedCoords = [row, col]\n    }\n    else {\n      lastClickedCoords = null\n    }\n  }\n\n  // no context menu, reload button pops up on resize\n  window.addEventListener('contextmenu', e => e.preventDefault())\n  window.addEventListener('resize', e => document.getElementById('resizeAlert').style.display = 'block')\n\n  // RENDERING\n\n  // default cell size\n  var boxSize = 20\n  // used to trace the mouse, as the events don't trigger fast enough for me :/\n  var lastClickedCoords = null\n\n  var gridHeight = Math.floor((window.innerHeight - 60) / boxSize)\n  var gridWidth = Math.floor((window.innerWidth) / boxSize)\n\n  function getGrid() {\n    var grid = []\n    for (let row = 0; row < gridHeight; row++) {\n      grid.push([])\n      for (let col = 0; col < gridWidth; col++) {\n        grid[row].push(<Box row={row} col={col} boxSize={boxSize} />)\n      }\n    }\n    return (grid)\n  }\n\n  var functionKeys = {\n    'depthFirstSearch': depthFirstSearch,\n    'breadthFirstSearch': breadthFirstSearch,\n    'aStar': astar\n  }\n\n  return (\n    <div className=\"App\" style={{ userSelect: 'none' }}>\n      <div id='header'>\n        <p onClick={() => startAlgorithm(functionKeys)} id='goButton'>Go</p>\n        <select id=\"algorithm\">\n          <option value='aStar'>AStar</option>\n          <option value='breadthFirstSearch'>Breadth First Search</option>\n          <option value='depthFirstSearch'>Depth First Search</option>\n        </select>\n      </div>\n      <div id='grid' onMouseMove={e => paint(e)} onMouseDown={e => paint(e, true)}>\n        {getGrid().map((row, key) => {\n          return (\n            <div className='row' id={key}>\n              {row.map((element) => {\n                return (element)\n              })}\n            </div>\n          )\n        })}\n      </div>\n      <span id='resizeAlert' onClick={() => window.location.reload()}>Looks like you resized your window. <br /> Click here to reset the grid</span>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}